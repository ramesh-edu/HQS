CREATE TABLE  "FACILITY_HQS" 
   (	"FID" NUMBER(*,0) NOT NULL ENABLE, 
	"FNAME" VARCHAR2(128) NOT NULL ENABLE, 
	"FADDRESS" VARCHAR2(256), 
	"FCITY" VARCHAR2(96), 
	"FSTATE" VARCHAR2(96), 
	"FZIPCODE" VARCHAR2(32) NOT NULL ENABLE, 
	"FCOUNTY" VARCHAR2(96), 
	"FPHONE" VARCHAR2(20), 
	"FLATITUDE" VARCHAR2(256), 
	"FOWNERSHIP" VARCHAR2(128), 
	"HID" NUMBER, 
	"FLONGITUDE" VARCHAR2(256), 
	"FMODIFIED" DATE, 
	 CONSTRAINT "PK_FACILITY_FID" PRIMARY KEY ("FID")
  USING INDEX  ENABLE
   )
/

CREATE OR REPLACE EDITIONABLE TRIGGER  "FACILITY_HQS_TRG"
BEFORE INSERT ON FACILITY_HQS
FOR EACH ROW
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.FID IS NULL THEN
      SELECT FACILITY_HQS_SEQ.NEXTVAL INTO :NEW.FID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;

/
ALTER TRIGGER  "FACILITY_HQS_TRG" ENABLE
/


CREATE TABLE  "FOOTNOTES_HQS"
(	"FNID" NUMBER(*,0) NOT NULL ENABLE,
"F_TEXT" VARCHAR2(4000),
"FDATE" DATE DEFAULT sysdate NOT NULL ENABLE,
"FMODIFIED" DATE DEFAULT SYSDATE,
CONSTRAINT "PK_FOOTNOTES_HQ_FNID" PRIMARY KEY ("FNID")
USING INDEX  ENABLE
)
/

CREATE OR REPLACE EDITIONABLE TRIGGER  "FOOTNOTES_HQS_TRG"
BEFORE INSERT ON FOOTNOTES_HQS
FOR EACH ROW
BEGIN
<<COLUMN_SEQUENCES>>
BEGIN
IF INSERTING AND :NEW.FNID IS NULL THEN
SELECT FOOTNOTES_HQS_SEQ.NEXTVAL INTO :NEW.FNID FROM SYS.DUAL;
END IF;
END COLUMN_SEQUENCES;
END;

/
ALTER TRIGGER  "FOOTNOTES_HQS_TRG" ENABLE
/

CREATE TABLE  "HOSPITAL_DETAILS_HQS"
(	"HID" NUMBER(*,0) NOT NULL ENABLE,
"HNAME" VARCHAR2(128) NOT NULL ENABLE,
"HDESC" VARCHAR2(4000),
"HQUALITY_RATING" NUMBER,
"HMODIFIED" DATE,
CONSTRAINT "PK_HOSPITAL_ID_HID" PRIMARY KEY ("HID")
USING INDEX  ENABLE
)
/

CREATE OR REPLACE EDITIONABLE TRIGGER  "HOSPITAL_DETAILS_HQS_TRG"
BEFORE INSERT ON HOSPITAL_DETAILS_HQS
FOR EACH ROW
BEGIN
<<COLUMN_SEQUENCES>>
BEGIN
IF INSERTING AND :NEW.HID IS NULL THEN
SELECT HOSPITAL_DETAILS_HQS_SEQ.NEXTVAL INTO :NEW.HID FROM SYS.DUAL;
END IF;
END COLUMN_SEQUENCES;
END;

/
ALTER TRIGGER  "HOSPITAL_DETAILS_HQS_TRG" ENABLE
/

CREATE TABLE  "MEASURES_TAKEN_HQS"
(	"MID" NUMBER(*,0) NOT NULL ENABLE,
"FID" NUMBER(*,0) NOT NULL ENABLE,
"MSTARTDATE" DATE,
"MENDDATE" DATE,
"MSTART_QUATER" VARCHAR2(20),
"MEND_QUATER" VARCHAR2(20),
"MNAME" VARCHAR2(256),
"MACRONYM" VARCHAR2(30),
"FNID" NUMBER,
"QSID" NUMBER,
"MSCORE" FLOAT(126),
CONSTRAINT "PK_MEASURES_TAK_MID" PRIMARY KEY ("MID")
USING INDEX  ENABLE,
PARTITION BY HASH ("MACRONYM")
)
/
ALTER TABLE  "MEASURES_TAKEN_HQS" ADD CONSTRAINT "FK_MEASURES_TAKEN_HQS" FOREIGN KEY ("FID")
REFERENCES  "FACILITY_HQS" ("FID") ENABLE
/

CREATE INDEX  "IDX_MEASURES_TAK_FID" ON  "MEASURES_TAKEN_HQS" ("FID")
/

CREATE OR REPLACE EDITIONABLE TRIGGER  "MEASURES_TAKEN_HQS_TRG"
BEFORE INSERT ON MEASURES_TAKEN_HQS
FOR EACH ROW
BEGIN
<<COLUMN_SEQUENCES>>
BEGIN
IF INSERTING AND :NEW.MID IS NULL THEN
SELECT MEASURES_TAKEN_HQS_SEQ.NEXTVAL INTO :NEW.MID FROM SYS.DUAL;
END IF;
END COLUMN_SEQUENCES;
END;

/
ALTER TRIGGER  "MEASURES_TAKEN_HQS_TRG" ENABLE
/

CREATE OR REPLACE EDITIONABLE TRIGGER  "TR_ATIUD_MEASURES_TAKEN_HQS"
BEFORE INSERT or update
	ON MEASURES_TAKEN_HQS
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
V_NUM   NUMBER;
BEGIN
IF INSERTING OR UPDATING THEN
select hqs_compare_to_national(:OLD.MACRONYM,:OLD.MSCORE) into V_NUM from dual;
:NEW.QSID:=V_NUM;
END IF;
END;

/
ALTER TRIGGER  "TR_ATIUD_MEASURES_TAKEN_HQS" DISABLE
/

CREATE TABLE  "QUALITY_PERFORMANCE_HQS"
(	"QSID" NUMBER(*,0) NOT NULL ENABLE,
"QNATIONAL_SCORE" FLOAT(126),
"QCOMPARE_TO_NATIONAL" VARCHAR2(100),
"QMEASUREID" VARCHAR2(48),
CONSTRAINT "PK_QUALITY_PERF_QSID" PRIMARY KEY ("QSID")
USING INDEX  ENABLE
)
/

CREATE OR REPLACE EDITIONABLE TRIGGER  "QUALITY_PERFORMANCE_HQS_TRG"
BEFORE INSERT ON "QUALITY_PERFORMANCE_HQS"
FOR EACH ROW
BEGIN
<<COLUMN_SEQUENCES>>
BEGIN
IF INSERTING AND :NEW.QSID IS NULL THEN
SELECT QUALITY_PERFORMANCE_HQS_SEQ.NEXTVAL INTO :NEW.QSID FROM SYS.DUAL;
END IF;
END COLUMN_SEQUENCES;
END;

/
ALTER TRIGGER  "QUALITY_PERFORMANCE_HQS_TRG" ENABLE
/

CREATE TABLE  "SOCIAL_LOGIN_DEMO_LOG"
(	"USERNAME" VARCHAR2(256),
"AUTH_SCHEMA" VARCHAR2(256),
"LOGIN_DATE" DATE DEFAULT sysdate
)
/
